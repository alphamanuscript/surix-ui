@import '../../variables';

$button-base-bgd-color: #f3f7ff;// #e4edff;
$button-base-color: #4288f9;
$color-danger: #ff4444;
$color-default: #4288f9;
$button-base-radius: $border-radius;
$button-round-radius: 64px;

$button-styles: (
  base-style: (color: $button-base-color, background: $button-base-bgd-color),
  primary: (color: white, background: $color-default),
  danger: (color: white, background: $color-danger)
);

$button-sizes: (
  base-size: (font-size: 0.9em, height: 36px, pad-x: 15px),
  small: (font-size: 12px, height: 28px, pad-x: 15px),
  large: (font-size: 18px, height: 50px, pad-x: 20px)
);

button {
  color: $button-base-color;
  border: none;
  border-radius: $border-radius;
  background-color: $button-base-bgd-color;
  font-family: $font-family;
  font-weight: 500;
  display: inline-flex;
  justify-content: space-between;

  &:active {
    outline: none;
    border: none;
  }
  &:focus {
    outline: none;
  }

  .label {
    flex-grow: 1;
    text-align: center;
  }
}

:host(.block) {
  display: flex;
  button {
    display: flex;
    justify-content: space-between;
    width: 100%;
  }
}

:host(.icon-only) button {
  display: inline-flex;
  justify-content: space-around;
}

:host(.circle) button {
  border-radius: 100%;
}

:host(.round) button {
  border-radius: $button-round-radius;
}


@each $style, $style-map in $button-styles {
  :host(.#{$style}) {
    button {
      background-color: map-get($style-map, background);
      color: map-get($style-map, color);

      &:hover {
        @if ($style == "base-style") {
          background: darken(map-get($style-map, background), 2%)
        }
        @else {
          background: lighten(map-get($style-map, background), 2%)
        }
      }
      &:active {
        @if ($style == "base-style") {
          background: darken(map-get($style-map, background), 5%)
        }
        @else {
          background: darken(map-get($style-map, background), 2%)
        }

      }
      &[disabled] {
        color: #c5c5c5;
        background-color: #f0f0f0;
      }
    }
  }
}

@each $size, $size-map in $button-sizes {
  :host(.#{$size}) {
    button {
      font-size: map-get($size-map, font-size);
      height: map-get($size-map, height);
      padding: {
        left: map-get($size-map, pad-x);
        right: map-get($size-map, pad-x);
      }
    }
  }
  :host(.#{$size}.circle), :host(.#{$size}.circle) {
    button {
      width: map-get($size-map, height);
    }
  }
}

::slotted([slot=prefix]) {
  margin-right: 1em;
}

::slotted([slot=suffix]) {
  margin-left: 1em;
}
